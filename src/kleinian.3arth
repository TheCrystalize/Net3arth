br(number n=1){
  return z=>{
    return {
      red:z.red*n,
      green:z.green*n,
      blue:z.blue*n,
    }
  }
}
sanity(){
  return z=>{
    if(z.alpha >64){
      return {...z,alpha:0};
    }
    return z;
  }
}

col(){
  return z=>{
    return {
      ...z,
      ...hslToRgb(Math.atan2(z.im,z.re)/Math.PI/2+0.5,0.5,0.5),
      alpha:1
    }
  }
}

modsl(){
  return z=>{
    let col = rgbToHsl(z.red,z.green,z.blue);
    return {
      ...z,
      ...hslToRgb(col.h,0.5,Math.pow(col.l*2,1/4)/2)
    };
  }
}

body:
choose{
  2:
    blurCircle()
    ->col()
    ->hypershape(3);
  1:
    scale(1-i)
    ->mobius(-1+0i, -0.5+0i, 0.5+0i, 1+0i);
  1:
    rotate(120)
    ->scale(-1+i)
    ->mobius(-1+0i, -0.5+0i, 0.5+0i, 1+0i)->rotate(-60);
  1:
    rotate(240)
    ->scale(-1+i)
    ->mobius(-1+0i, -0.5+0i, 0.5+0i, 1+0i)->rotate(60);
};

camera:
choose{
  1:mobius(0i, i, i, 0i)->scale(1-i);
  1:scale(1);
}
->scale(1/8);

shader: gamma(4)->modsl();
