blurStrip() {
  return z => {
    return {
      ...z,
      re: Math.random() - 0.5,
      im: Math.random() - 0.5 - z.im
    }
  }
}

decodeGradient(string txt) {
  let t = txt.replace(/\W*/g, '');
  let ans = [];
  for(var i = 0; i < t.length; i += 6) {
    ans.push(
      colorRGB(
        Number.parseInt(t[i + 0] + t[i + 1], 16) / 255,
        Number.parseInt(t[i + 2] + t[i + 3], 16) / 255,
        Number.parseInt(t[i + 4] + t[i + 5], 16) / 255
      )
    );
  }
  return ans;
}


const myGradient = decodeGradient(
` D98703FAA701FBA401FCA102FBA302FBA603FAA403F9A303
  DD8403C16C02A554028D450575360958280D3B1A12351912
  3019125433145B3F18634C1D62532A625A38636447656E57
  417E934587A74991BB69A3B089B5A58DB49E91B498B5C182
  D6BE5EE2B032BFAC4C9DA8668B8F647977637372626D6D62
  787B698C784CA0762FC0831BE19107EA9604F39B02F6A204
  F7A307FB9A0BF0860CE6720DC75F12A94C189E4417933D17
  4E151B331220180F260E122105161C04151D03141E061422
  0B181B241B1940291A5D371C6E401D80491E9A5622B46820
  E99016F29715FC9F15FB9F0FFAA00AF9A008F9A106F8A107
  F3A20AC39011A082287E753F74754D6A755B4C6B6F30567B
  35577B4A5C6E606261635B54665547704A2B7647107E4E06
  8651039C530AA95C10B76516C36A15D07014D36B15BF5F14
  8B3F19682C1945191A341219230C1912061708031A020118
  00021400030B00030A00030900030901040A0504090A0409
  1E06113A1A0E562F0B63390A7144098C4F0FAC5F10C46F14
  CE7715AC661F9D612B8E5C37785756585B7438648B176BA7
  0478C80271B6016AA5016493015F82005068003846002029
  00150E0813020E13031413052D21044A39036D53028A6405
  C98E05D69904E4A504F5B006FCB40CFBB113F3AD1FCDAB3D
  ABA7637C9388678B8E53849435749719689A1559840D4571
  111F41101D3A0F1B330A153408113706134204205605306E
  0743840557970170AB027BBC0679BD066CB304629B075483
  1D2B472829383427295331167443098E5104A76401C47801
  DF8803E38A03D47C01B86A009F5601854A02673703442406
  28120A150D0E0B0B1206101B03142B021D41002A5F02417C
  035A980370B00181C9018DD8058CD70D84BD217E9D41837E
  637F648079449C7728BD8E19DDA511F2B60DFBB909FDBD10
  FDC10FFDC00DFFB405FA9E06EA8307D16A06BB5604AE4101
  A331039B2A03982E039D3500A03E00A042009B4400923E00
  7C3A00612D00411C00280A001403020A0105030206020206
  07020710020822080A3B1C0A623D078050049D5704B46203`);

apoGradient(number position, object grad) {
  const myGradientFunction = repeatingGradient(grad);

  return z => {
    if(isNaN(z.gradientPosition)) {
      z.gradientPosition = position;
    }
    z.gradientPosition = (z.gradientPosition + position) / 2;
    let temp = z.im;
    return {
      ...myGradientFunction({
        ...z,
        im: z.gradientPosition
      }),
      im: temp
    }
  }
}

transform ApophysisGrad(number position):
  apoGradient(position, myGradient);

body:
  xaos{
    1:e:[0,1,1,1]:
      blurStrip()
      -> scale2(0.1, 1)
      -> splits(1, 0)
      -> ApophysisGrad(0.3);
    1.5:_:[0,1,1,1]:
      arcsinh()
      -> rotate(90)
      -> ApophysisGrad(0.4);
    1.5:_:[0,1,1,1]:
      scale(2)
      -> rotate(90)
      -> splits(1.05, 0)
      -> ApophysisGrad(0.5);
    1:o:[0,0,0,1]:
      scale(1);
  };

camera:
  translate(0.2, -0.12)
  -> rotate(-90)
  -> circleInv();

shader:
  gamma(1.5);
